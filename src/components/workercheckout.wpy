<style lang="less">
  .swiper-tab {
    width: 100%;
    line-height: 80rpx;
    background-color:white;
  }
  .swiper-tab-list {
    font-size: 30rpx;
    display: inline-block;
    width:50%;
    color: #777;
    border-bottom: 0rpx;
    text-align: center;
  }
  .on {
    color: #0ec3bc;
    border-bottom: 2rpx solid #0ec3bc;
  }
  .swiper-box {
    display: block;
    height: 100%;
    width: 100%;
    overflow: hidden;
  }
  swiper{
    height: 1000rpx!important;
  }
  .txt{
    color:#121212;
    font-size:23rpx;
    text-align:left;
    line-height:55rpx;
  }

  .title{
    font-size:32rpx;
    text-align:left;
    margin-bottom: 8rpx;
    font-weight: bold;
  }
  .general{
    color: #aaaaaa;
    font-size:28rpx;
    text-align: left;
    margin-bottom: 25rpx;
    width: 100%;
  }
  .light{
    color: #13bfc1;
    font-size:34rpx;
    margin-top:72%;
    margin-bottom: 40rpx;
    font-weight: bold;
  }
  .light text{
    font-weight: normal;
    font-size: 23rpx;
  }
  .gray{
    color: #666;
    font-size:34rpx;
    margin-top:72%;
    margin-bottom: 40rpx;
    font-weight: bold;
  }
  .gray text{
    font-weight: normal;
    font-size: 23rpx;
  }
  .block{
    display: block;
  }
  .summa{
    background-color:#fff;
    width:84%;
    margin:30rpx auto;
    padding:60rpx 5%;
    border-radius:20rpx;
    display:flex;
    flex-direction:row;
  }
  .text{
    font-size:26rpx;
    text-align:left;
    margin-top:6px;
    font-weight:600;
    flex:1;
    margin-bottom: 35rpx;
  }
  .num{
    color: #1fbfb7;
    font-size:43rpx;
    font-weight: bold;
    text-align: right;
    flex:1;
  }
  .numgray{
    color: #666;
    font-size:43rpx;
    font-weight: bold;
    text-align: right;
    flex:1;
  }
  .icon{
    width: 16rpx;
    height: 16rpx;
    margin-right: 15rpx;
  }
  .serve{
    background-color: #fff;
    margin-top: 15rpx;
    padding:20rpx 25rpx 10rpx 25rpx;
  }
  .serve ul li{
    display: block;
    text-align: left;
  }
  .serve ul li text{
    font-size: 26rpx;
  }
  .total{
    display: flex;
    margin-top:10rpx;
  }
  .totalLeft{
    text-align: left;
    flex: 1;
    margin-left:10rpx;
  }
  .totalRight{
    flex: 1;
    text-align: right;
    margin-right: 10rpx;
  }
  .set{
    float: right;
    margin-right: 10rpx;
    font-size: 24rpx;
    font-weight: normal;
  }
  .gnl{
    margin-left: 15rpx;
  }
  .checkoutwrap .item{
    margin-top:50px;
    margin-bottom:8px;
  }
  .Null {
    text-align: center;
    font-size: 28rpx;
    color: #999;
    width: 100%;
    margin-top: 25%;
  }
</style>

<template>
  <view class="checkoutwrap">

    <view class="swiper-tab">
      <view class="swiper-tab-list {{currentTab ==='0' ? 'on' : ''}}" data-current="0" bindtap="tabNav">未结款</view>
      <view class="swiper-tab-list {{currentTab==='1' ? 'on' : ''}}" data-current="1" bindtap="tabNav">已结款</view>
    </view>
    <view wx:if="{{currentTab === '0'}}">
      <view class="item">
        <view  wx:if="{{taskList.length === 0}}" class="Null">暂无结账信息哦 ~~</view>
          <block class="item" wx:for="{{taskList}}" wx:for-item="item"  wx:key="rowId">
            <!--循环体-->
            <view class="serve">
              <view class="title">{{item.taskTypeText}}</view>
              <ul>
                <li>
                  <image src="../images/time.png" class="icon"></image>
                  <text class="general">{{item.fromDate}} - {{item.toDate}}</text>
                </li>
                <li>
                  <image src="../images/yellow.png" class="icon"></image>
                  <text class="general">时薪：{{item.hourlyPay}}/小时</text>
                  <text class="general gnl">应结款金额：{{item.shouldPayMoney}}元</text>
                </li>
                <li>
                  <image src="../images/blue.png" class="icon"></image>
                  <text class="general">酒店名称：{{item.hotelName}}</text>
                </li>
                <li>
                  <image src="../images/pink.png" class="icon"></image>
                  <text class="general">人力公司：{{item.hrCompanyName}}</text>
                </li>
              </ul>
              <view class="total">
                <view class="totalLeft txt">工作时长： <text class="light">{{item.minutes}} <text>小时</text></text></view>
                <view class="totalRight txt">未结款金额： <text class="light">{{item.waitPayMoney}} <text>元</text></text></view>
              </view>
            </view>
          </block>
      </view>
    </view>
    <view wx:if="{{currentTab === '1'}}">
      <view class="item">
        <view  wx:if="{{taskList.length === 0}}" class="Null">暂无结账信息哦 ~~</view>
        <block class="item" wx:for="{{taskList}}" wx:for-item="item"  wx:key="rowId">
          <!--循环体-->
          <view class="serve">
            <view class="title">{{item.taskTypeText}}</view>
            <ul>
              <li>
                <image src="../images/time.png" class="icon"></image>
                <text class="general">{{item.fromDate}} - {{item.toDate}}</text>
              </li>
              <li>
                <image src="../images/yellow.png" class="icon"></image>
                <text class="general">时薪：{{item.hourlyPay}}/小时</text>
                <text class="general gnl">应结款金额：{{item.shouldPayMoney}}元</text>
              </li>
              <li>
                <image src="../images/blue.png" class="icon"></image>
                <text class="general">酒店名称：{{item.hotelName}}</text>
              </li>
              <li>
                <image src="../images/pink.png" class="icon"></image>
                <text class="general">人力公司：{{item.hrCompanyName}}</text>
              </li>
            </ul>
            <view class="total">
              <view class="totalLeft txt">工作时长： <text class="gray">{{item.minutes}} <text>小时</text></text></view>
              <view class="totalRight txt">已结款金额： <text class="gray">{{item.havePayMoney}} <text>元</text></text></view>
            </view>
          </view>
        </block>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import moment from 'moment'
  import {searchTaskworkers} from '../actions/workerAction'
  import {getUserId} from '../util/userInfo'
  export default class workercheckout extends wepy.component {
    props = {}
    data ={
      taskList: [],
      queryObj: {
        paginator: {
          page: 1,
          pageSize: 100
        },
        selector: {
//          payStatus: 1,
        },
        userType: ''
      },
      isShow: true,
      currentTab: '0',
      userId: ''
    }
    methods = {
      tabNav: function (e) {
        if (this.currentTab === e.target.dataset.current) {
          return false
        } else {
          this.currentTab = e.target.dataset.current
          this.searchTaskworkers()
          this.$apply()
        }
      }
    }
    searchTaskworkers() {
      var that = this
      wx.showLoading({title: '加载中'})
      if (this.currentTab === '0') {
        this.queryObj.selector = {workerId: this.userId, payStatus: 1}
        that.$apply()
      } else if (this.currentTab === '1') {
        this.queryObj.selector = {workerId: this.userId, payStatus: 3}
        that.$apply()
      }
      searchTaskworkers(this.queryObj).then((data) => {
        that.taskList = data.data.data.list
        for (var i = 0; i < that.taskList.length; i++) {
          that.taskList[i].fromDate = moment(new Date(that.taskList[i].fromDate)).format('YYYY-MM-DD HH:mm')
          that.taskList[i].toDate = moment(new Date(that.taskList[i].toDate)).format('YYYY-MM-DD HH:mm')
          that.taskList[i].minutes = that.changeHour(that.taskList[i].minutes)
          that.taskList[i].waitPayMoney = that.taskList[i].waitPayMoney.toFixed(2)
          that.taskList[i].havePayMoney = that.taskList[i].havePayMoney.toFixed(2)
        }
        that.$apply()
        console.log('searchTaskworkers', that.taskList)
        wx.hideLoading()
      })
    }
    changeHour(minutes) {
      var hour = parseFloat((minutes / 60).toFixed(2))
      return hour
    }
    watch = {}
    onLoad () {
      var userInfo = wx.getStorageSync('keyUserInfo')
      this.userType = userInfo.userType
      switch (this.userType) {
        case 'worker':
          this.userId = getUserId()
          this.searchTaskworkers()
          this.changeHour()
          break
        case 'hr':
          break
        case 'hotel':
          break
      }
    }
  }
</script>
